/* 
Worldwide layoffs Exploratory Data Analysis 

Skills used: Basic Querying, Aggregate Functions, Filtering with WHERE Clause, Ordering Results, Grouping Data, Date Functions, Common Table Expressions (CTEs),Window Functions.

*/

SELECT *
FROM layoffs_staging2;


SELECT MAX(total_laid_off),MAX(percentage_laid_off)
FROM layoffs_staging2;

-- We look at the companies that completely went out of business
SELECT *
FROM layoffs_staging2
WHERE percentage_laid_off = 1
ORDER BY total_laid_off DESC;

SELECT MIN(`date`),MAX(`date`)
FROM layoffs_staging2;

-- Summary of layoffs for each company ordered by the 'total_laid_off' column
SELECT company, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company
ORDER BY 2 desc;

-- Summary of layoffs for each industry ordered by the 'total_laid_off' column
SELECT industry, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY industry
ORDER BY 2 desc;

-- Summary of layoffs for each country ordered by the 'total_laid_off' column
SELECT country, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY country
ORDER BY 2 desc;

-- Summary of layoffs for each year ordered by year
SELECT YEAR(`date`), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY YEAR(`date`)
ORDER BY 1 desc;

-- Summary of layoffs for each stage
SELECT stage, SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY stage
ORDER BY 2 desc;

-- Total layoffs by year and month, ordered by year and month asc
SELECT SUBSTRING(`date`,1,7) AS `MONTH`, SUM(total_laid_off)
FROM layoffs_staging2
WHERE SUBSTRING(`date`,1,7) IS NOT NULL
GROUP BY SUBSTRING(`date`,1,7)
ORDER BY 1 ASC;

-- Rolling total of layoffs (CTE) by year and month
WITH Rolling_Total AS
(
SELECT SUBSTRING(`date`,1,7) AS `MONTH`, SUM(total_laid_off) AS total_off
FROM layoffs_staging2
WHERE SUBSTRING(`date`,1,7) IS NOT NULL
GROUP BY SUBSTRING(`date`,1,7)
ORDER BY 1 ASC
)
SELECT `MONTH`,total_off
, SUM(total_off) OVER(ORDER BY `MONTH`) as rolling_total
FROM Rolling_Total;

-- 
SELECT company,YEAR(`date`), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company,YEAR(`date`)
ORDER BY 3 DESC;

-- The following query selects the top 5 companies with the highest total layoffs for each year.

-- First, a Common Table Expression (CTE) named Company_Year is created to aggregate total layoffs for each company by year.
WITH Company_Year (company, years, total_laid_off) AS
(
SELECT company,YEAR(`date`), SUM(total_laid_off)
FROM layoffs_staging2
GROUP BY company,YEAR(`date`)
),
-- Next, another CTE named Company_Year_Rank is created to rank the companies within each year based on total layoffs.
Company_Year_Rank AS
(
SELECT * , 
DENSE_RANK() OVER (PARTITION BY years ORDER BY total_laid_off DESC) AS Ranking
FROM Company_Year
WHERE years IS NOT NULL
)
-- Finally, the main query selects all columns from Company_Year_Rank for companies with a ranking <= 5.
SELECT * 
FROM Company_Year_Rank
WHERE Ranking <= 5;
